---
import { BskyAgent } from "@atproto/api";
import type {
  ProfileView,
  ProfileViewDetailed,
} from "@atproto/api/dist/client/types/app/bsky/actor/defs";

interface Props {
  followers: ProfileView[];
}

const followers = Astro.props.followers;
const AGENT = new BskyAgent({
  service: "https://bsky.social",
});
let followersData = null;
const sess = Astro.cookies.get("bsky-session");
if (sess) {
  await AGENT.resumeSession(sess.json());
  followersData = await Promise.all(
    followers.map(
      async (f) =>
        (
          await AGENT.getProfile({
            actor: f.did,
          })
        ).data
    )
  );
}
const ratio = (profile: ProfileViewDetailed) => {
  if (!profile.followersCount) {
    return 1000;
  }
  if (!profile.followsCount) {
    return -1000;
  }
  return profile.followersCount / profile.followsCount;
};
---

<div>
  {
    followersData?.map((f) => (
      <div class="flex bg-red-500">
        <img src={f.avatar} class="max-w-xs" />
        <div class="flex flex-col">
          <div>
            {f.displayName} ({f.did})
          </div>
          <div>followers: {f.followersCount}</div>
          <div>follows: {f.followsCount}</div>
          <div>ratio: {ratio(f)}</div>
          <div>mutuals: {f.viewer?.following ? "yes" : "no"}</div>
          <div>
            <a href={`https://staging.bsky.app/profile/${f.handle}`}>
              {f.handle}
            </a>
          </div>
        </div>
      </div>
    ))
  }
</div>
