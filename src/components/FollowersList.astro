---
import { BskyAgent } from "@atproto/api";
import type { ProfileViewDetailed } from "@atproto/api/dist/client/types/app/bsky/actor/defs";
import clsx from "clsx";
import FollowerCard from "./FollowerCard.astro";

const AGENT = new BskyAgent({
  service: "https://bsky.social",
});
let followersData = null;
const sess = Astro.cookies.get("bsky-session");
if (sess.value) {
  const user = await AGENT.resumeSession(sess.json());
  const followers = (
    await AGENT.getFollowers({
      actor: user.data.did,
    })
  ).data.followers;
  followersData = await Promise.all(
    followers.map(
      async (f) =>
        (
          await AGENT.getProfile({
            actor: f.did,
          })
        ).data
    )
  );
}

const ratio = (profile: ProfileViewDetailed) => {
  if (!profile.followersCount) {
    return 1000;
  }
  if (!profile.followsCount) {
    return -1000;
  }
  return profile.followersCount / profile.followsCount;
};
---

<div class="mx-6 border rounded-lg overflow-hidden divide-y">
  {
    followersData
      ?.sort((a, b) => ratio(b) - ratio(a))
      .map((f) => <FollowerCard follower={f} ratio={ratio(f)} />)
  }
</div>
<script>
  document.getElementById("mutuals")?.addEventListener("checj", () => {});
</script>
