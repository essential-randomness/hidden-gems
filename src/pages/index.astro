---
import { BskyAgent } from "@atproto/api";
import type { AtpSessionEvent, AtpSessionData } from "@atproto/api";

import Login from "../components/Login.astro";
import FollowersList from "../components/FollowersList.astro";
import type { ProfileView } from "@atproto/api/dist/client/types/app/bsky/actor/defs";

const { BSKY_USERNAME, BSKY_PASSWORD } = import.meta.env;
let followersData: ProfileView[] | null = null;
if (Astro.request.method === "POST") {
  try {
    const data = await Astro.request.formData();
    if (data.has("logout")) {
      Astro.cookies.delete("bsky-session");
    } else if (data.has("email") && data.has("password")) {
      const AGENT = new BskyAgent({
        service: "https://bsky.social",
        persistSession: (_evt: AtpSessionEvent, sess?: AtpSessionData) => {
          if (sess) {
            Astro.cookies.set("bsky-session", sess);
          }
        },
      });
      const { data: user } = await AGENT.login({
        identifier: BSKY_USERNAME,
        password: BSKY_PASSWORD,
      });
    }
  } catch (e) {
    console.log(e);
  }
  const sess = Astro.cookies.get("bsky-session");
  if (sess.value) {
    const AGENT = new BskyAgent({
      service: "https://bsky.social",
    });
    const user = await AGENT.resumeSession(sess.json());
    followersData = (
      await AGENT.getFollowers({
        actor: user.data.did,
      })
    ).data.followers;
  }
}
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>Astro</title>
  </head>
  <body>
    <h1>Find the Hidden Gems following you ðŸ’Ž</h1>
    <Login />
    {followersData && <FollowersList followers={followersData} />}
  </body>
</html>
